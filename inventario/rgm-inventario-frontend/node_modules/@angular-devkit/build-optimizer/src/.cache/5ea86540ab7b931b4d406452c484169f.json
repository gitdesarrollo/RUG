{"remainingRequest":"/home/corellana/Projects/Java/RUG/inventario/rgm-inventario-frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/corellana/Projects/Java/RUG/inventario/rgm-inventario-frontend/node_modules/date-fns/get_time/index.js","dependencies":[{"path":"/home/corellana/Projects/Java/RUG/inventario/rgm-inventario-frontend/node_modules/date-fns/get_time/index.js","mtime":1544450745000},{"path":"/home/corellana/Projects/Java/RUG/inventario/rgm-inventario-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/corellana/Projects/Java/RUG/inventario/rgm-inventario-frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var parse = require('../parse/index.js')\n\n/**\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nfunction getTime (dirtyDate) {\n  var date = parse(dirtyDate)\n  var timestamp = date.getTime()\n  return timestamp\n}\n\nmodule.exports = getTime\n",null]}